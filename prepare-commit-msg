#!/bin/bash
# Git hook to create/update issue on commit.
# This script uses redmine/planio API for handling issues.

# Required configurations --
# issue.number -- update this issue if issue ID or number in config is not blank.
# issue.project -- redmine project name where issue will be posted.
# issue.user -- user ID to which you want to assign issue when it is created.
# issue.apikey -- Redmine API key to access API.
# issue.host -- Redmine site URL.

#to check git config use command -- git config --list

issue=$(git config issue.number)
issueProject=$(git config issue.project)
issueUser=$(git config issue.user)
issueApi=$(git config issue.apikey)
issueUrl=$(git config issue.host)


function get_json {
    python -c "import sys;import json;j=json.loads(sys.stdin.read());print(str(j$1));"
}


function is_issue_in_commit {
   python -c "import sys;import re;print(len(re.findall(r\"\[#.*?\]\:\s+http[s]\:\/\/.*?\",sys.stdin.read()))>0)"
}


#Add issue if a issue number and link is not already added in commit
function add_issue_to_commit {

    shouldAddIssue=`cat "$2" | is_issue_in_commit`

    if [ "$shouldAddIssue" != "True" ]
    then
	echo -e "$(cat $2)""\n\n[#$1]: $issueUrl/issues/$1 " > "$2"
    fi
}


if [ "$issueUrl" == "" ]
then
    read -p "Enter redmine site URL: " issueUrl
fi

if [ "$issueApi" == "" ]
then
    read -p "Enter issue API key: " issueApi
fi

if [ "$issueProject" == "" ]
then
    read -p "Enter issue project name: " issueProject
fi


if [ "$issue" == "" ]
then
    echo "Configuration Error: issue.number is empty"

    read -r -p "Would you like to create issue? [y/N] " response

    case "$response" in
        [yY][eE][sS]|[yY]) 
            echo "Creating issue..."

	    read -p "Enter issue subject: " issueSubject

	    read -p "Enter issue description: " issueDescription

	    issueJson='{ "issue": {'

	    if [ "$issueUser" != "" ]
	    then
		issueJson="$issueJson\"assigned_to_id\":\"$issueUser\","
	    fi

	    issueJson="$issueJson\"project_id\":\"$issueProject\","

	    issueJson="$issueJson\"subject\":\"$issueSubject\","

	    issueJson="$issueJson\"description\":\"$issueDescription\""

	    issueJson="$issueJson}}"

            createResponse=$(curl --silent -k "$issueUrl/issues.json" -X POST -H "X-Redmine-API-Key: $issueApi" -H 'Content-Type: application/json' -d "$issueJson")

	    issue_id=`echo $createResponse | get_json "['issue']['id']"`

	    if [ "$issue_id" == "" ]
	    then
		echo "Failed to create issue."
		exit 1
	    else
		git config issue.number $issue_id
		echo "Issue number updated in configuration"
		add_issue_to_commit $issue_id $1
	    fi
            ;;
        *)
            exit 1
            ;;
    esac
else
    add_issue_to_commit $issue $1
fi

